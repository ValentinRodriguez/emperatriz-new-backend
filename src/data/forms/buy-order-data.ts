import { StateToFilter, TypeColumn, TypeElement, UrlProgram } from "../../utils/global-table-enum";

export const PurchasOrderOrderData:any = [
    {
        input_id: "order_proforma_number",
        typeElement: "order_proforma_number",
        type: TypeElement.input,
        form: UrlProgram.GestionDeOrdenesCompras,
        label: "Proforma",
        formControlName: "order_proforma_number",
        name: "order_proforma_number",
        placeholder: "ingrese numeno de proforma",
        validations: JSON.stringify( [{ required: true}]),
        disabled: false,
        class: "field col-12 md:col-3"
    },
    {
        input_id: "order_providerId",
        type: TypeElement.autoComplete,
        form: UrlProgram.GestionDeOrdenesCompras,
        label: "Proveedor",
        optionLabel: "provider_name",
        formControlName: "order_providerId",
        name: "order_providerId",
        placeholder: "Seleccione proveedor",
        suggestions: "dataToSohowOnAutoCompletes",
        stateToFilter: StateToFilter.Provider,         
        click: "filterOnAutoComplete",
        validations: JSON.stringify( [{ required: true}]), 
        disabled: false,
        field: "suggestion",
        class: "field col-12 md:col-3"
    },
    {
        input_id: "order_currencyId",
        type: TypeElement.autoComplete,
        form: UrlProgram.GestionDeOrdenesCompras,
        label: "Moneda de pago",
        optionLabel: "currency",
        formControlName: "order_currencyId",
        name: "order_currencyId",        
        suggestions: "dataToSohowOnAutoCompletes",        
        click: "filterOnAutoComplete",
        stateToFilter: StateToFilter.Currency,        
        validations: JSON.stringify( [{ required: true}]), 
        disabled: false, 
        field: "suggestion",
        class: "field col-12 md:col-3"
    },
    {
        input_id: "order_payment_conditionId",
        type: TypeElement.autoComplete,
        form: UrlProgram.GestionDeOrdenesCompras,
        label: "Condiciones de pago",
        optionLabel: "payment_condition_description",
        formControlName: "order_payment_conditionId",
        name: "order_payment_conditionId",        
        suggestions: "dataToSohowOnAutoCompletes",        
        click: "filterOnAutoComplete",
        stateToFilter: StateToFilter.PaymentsCondition,       
        validations: JSON.stringify( [{ required: true}]), 
        disabled: false, 
        field: "suggestion",
        class: "field col-12 md:col-3"
    },
    {
        input_id: "order_delivery_way",
        type: TypeElement.dropdown,
        form: UrlProgram.GestionDeOrdenesCompras,
        label: "Metodo Envio",
        formControlName: "order_delivery_way",
        placeholder: "Seleccione nivel",
        name: "order_delivery_way",
        class: "field col-12 md:col-3",	
        options: JSON.stringify([
            {name: 'Terrestre', id: 'terrestre'},
            {name: 'Maritimo', id: 'maritimo'},
            {name: 'Aereo', id: 'aereo'},
        ]),
        optionLabel: "name",
        optionValue: "id",
        validations: JSON.stringify( [{ required: true}]), 
        disabled: false,
    },

    {
        input_id: "order_delivery_date",
        dateFormat: "yy/mm/dd",
        type: TypeElement.inputCalendar,
        form: UrlProgram.GestionDeOrdenesCompras,
        label: "Fecha",
        formControlName: "order_delivery_date",
        name: "order_delivery_date",
        placeholder: "order_delivery_date",
        validations: JSON.stringify( [{ required: true}]), 
        disabled: false,
        action: "onSelectDate",
        minDate: new Date(),
        class: "col-12 field md:col-3"
    },
    {
        input_id: "order_observations",
        type: TypeElement.textarea,
        form: UrlProgram.GestionDeOrdenesCompras,
        label: "Descripcion",
        formControlName: "order_observations",
        name: "order_observations",
        placeholder: "Alguna observacion?",
        validations: JSON.stringify( [{ required: false}]), 
        disabled: false,
        class: "field col-12",
        rows: 3,
        cols: 10
    },  
    {
        input_id: "order_file",
        type: TypeElement.file,
        form: UrlProgram.GestionDeOrdenesCompras,
        label: "Archivos de la orden",
        formControlName: "order_file",
        name: "order_file",
        placeholder: "Escoja Imagen",
        multiple: "multiple",
        accept: "pdf/*",
        maxFileSize: 5000000,   
        invalidFileSizeMessageSummary: "Tamaño de archivo excedido, ",	
        invalidFileSizeMessageDetail: "El tamaño del archivo no puede ser mayor a {0}.",	
        invalidFileTypeMessageSummary: "Tipo de archivo incorrecto",
        invalidFileTypeMessageDetail: "tipo de archivo permitido es {0}.",
        invalidFileLimitMessageSummary: "Cantitidad maxima de archivos superada",
        invalidFileLimitMessageDetail: "el número máximo de archivos es {0}.",	
        showUploadButton: false,
        validations: JSON.stringify( [{ required: false}]), 
        disabled: false,
        class: "col-12",
        cancelLabel: "Cancelar",
    },
    {
        input_id: "formarray_order_products",
        type: TypeElement.fieldSet,
        form: UrlProgram.GestionDeOrdenesCompras,
        label: "Productos vinculados a la orden",
        formControlName: "formarray_order_products",
        name: "formarray_order_products",
        click: "AddProducts",
        formArray: JSON.stringify([
            { field: 'image', type: TypeColumn.Image, header: 'Imagen' },
            { field: 'code', type: TypeColumn.Number, header: 'Código' },
            { field: 'quantity', type: TypeColumn.Input, header: 'Cantidad', input:'calculate', min:1, max:10000000000000},
            { field: 'price', type: TypeColumn.Input, header: 'Precio', input:'calculate', min:1, max:10000000000000 },
            { field: 'discount_percent', type: TypeColumn.Input, header: '% Descuento', input:'calculate', min:0, max:100 },
            { field: 'amount_discount', type: TypeColumn.Input, header: 'Monto Descuento', readonly: true },
            { field: 'itbis', type: TypeColumn.Input, header: 'ITBIS',readonly: true },
            { field: 'order_gross_value', type: TypeColumn.Input, header: 'Valor Bruto',readonly: true },
            { field: 'order_net_value', type: TypeColumn.Input, header: 'Valor Neto',readonly: true },
            { field: 'actions', type: TypeColumn.Actions, header: 'Acciones' },
        ]),
        formArrayFooter: true,
        globalFilterFields: JSON.stringify(['titulo','codigo','categoria','marca','almacen','tipoinventario']),
        validations: JSON.stringify( [{ required: true}]), 
        disabled: false,
        class: "col-12 mt-4",
        rows: 10
    },
]